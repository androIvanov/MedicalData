// <auto-generated />
using System;
using MedicalData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalData.Migrations
{
    [DbContext(typeof(Model))]
    [Migration("20201129150828_firstRelation")]
    partial class firstRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MedicalData.BillingProviders", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addres")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntityTypeQualifier")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdentificationCode")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("IdentificationCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NameFirst")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameLast")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NameMiddle")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamePrefix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameSuffix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProviderCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceIdQualifier")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TaxReferenceId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxReferenceIdQualifier")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ProviderId");

                    b.ToTable("BillingProviders");
                });

            modelBuilder.Entity("MedicalData.CallsToActions", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Action1")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Action2")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PtdCoeficient")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("CallsToActions");
                });

            modelBuilder.Entity("MedicalData.ClaimPayments", b =>
                {
                    b.Property<int>("ClaimPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimContactComunicationsNumber")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimContactComunicationsNumberQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ClaimFilingIndicatorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ClaimFrequencyTypeCode")
                        .HasColumnType("nchar(1)");

                    b.Property<decimal>("ClaimPaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ClaimPaymentPeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ClaimPaymentPeriodStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ClaimRecivedDate")
                        .HasColumnType("date");

                    b.Property<string>("ClaimStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CorrectedSubscriberEntiryTypeQualifier")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CorrectedSubscriberFirstName")
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("CorrectedSubscriberLastName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CorrectedSubscriberMiddleName")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CorrectedSubscribreNameSuffix")
                        .HasColumnType("nchar(10)");

                    b.Property<decimal>("CoverageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FacilityCodeValue")
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("PatientControlNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("PatientEntityTypeQualifier")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<string>("PatientFirstName")
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("PatientLastName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PatientMiddleName")
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal>("PatientResponsibilityAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayerClaimControlNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RenderingProviderEntityTypeQualifier")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("RenderingProviderFirstName")
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("RenderingProviderId")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("RenderingProviderIdCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("RenderingProviderLastName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RenderingProviderMiddleName")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RenderingProviderNameSuffix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubscriberEntiryTypeQualifier")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SubscriberFirstName")
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("SubscriberIdCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("SubscriberIdentifierCode")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SubscriberLastName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("SubscriberMiddleName")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SubscribreNameSuffix")
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal>("TotalClaimChargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("ClaimPaymentId");

                    b.ToTable("ClaimPayments");
                });

            modelBuilder.Entity("MedicalData.Entities.Claims", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdditionalDiagnosisCode1")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AdditionalDiagnosisCode2")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AssignmentOfBenefitsIndicator")
                        .HasColumnType("nchar(1)");

                    b.Property<string>("ClaimFrequencyTypeCode")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<string>("ClaimRefferenceId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DTP434")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FacilityCodeQualifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("FacilityCodeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InstitutionalAdmissionSourceCode")
                        .HasColumnType("nchar(1)");

                    b.Property<string>("InstitutionalAdmissionTypeCode")
                        .HasColumnType("nchar(1)");

                    b.Property<string>("InstitutionalInstitutionalPatientStatusCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("MonetaryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OccurenceDate")
                        .HasColumnType("date");

                    b.Property<string>("OccurrenceCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("OnsetDate")
                        .HasColumnType("date");

                    b.Property<string>("PatientControlNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("PrincipalDiagnosisCode")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProviderAcceptAssignmentCode")
                        .HasColumnType("nchar(1)");

                    b.Property<string>("RelatedCausesCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SignatureOnFileIndicator")
                        .HasColumnType("nchar(1)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("MedicalData.Entities.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("DiagnosisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiagnosisCodingMethod")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DiagnosisDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DiagnosisDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiagnosisType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiagnosticRelatedGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DiagnosisId");

                    b.ToTable("Diagnosis");
                });

            modelBuilder.Entity("MedicalData.Entities.EDI835Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.ToTable("EDI835Messages");
                });

            modelBuilder.Entity("MedicalData.Entities.EDI837Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.ToTable("EDI837Message");
                });

            modelBuilder.Entity("MedicalData.Entities.Eligibility", b =>
                {
                    b.Property<int>("EligibilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("COBSequence")
                        .HasColumnType("int");

                    b.Property<string>("EligibilityStatus")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SetIDZM2")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("UnpaidBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("UnpaidBalanceType")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EligibilityId");

                    b.ToTable("Eligibility");
                });

            modelBuilder.Entity("MedicalData.Entities.Guarantors", b =>
                {
                    b.Property<int>("GuarantorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmployerAddress")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmployerPhoneNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumberBusiness")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumberHome")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SNN")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GuarantorId");

                    b.ToTable("Guarantors");
                });

            modelBuilder.Entity("MedicalData.Entities.HL7Messages", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MessageDateTime")
                        .HasColumnType("datetime");

                    b.ToTable("HL7Messages");
                });

            modelBuilder.Entity("MedicalData.Entities.Insurance", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AuthorizationInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BillingStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CertificationAgency")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CertificationBeginDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CertificationDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CertificationEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CertificationModifyDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CertificationNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CertificationRequired")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CertifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyPlanCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordinationBenefitsPriority")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordinationofBenefits")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GroupNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GuarantorId")
                        .HasColumnType("int");

                    b.Property<string>("InsuredFamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuredGivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuredMiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuredSuffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuredsAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("InsuredsDateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("InsuredsEmployerName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InsuredsIDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuredsSSN")
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("NoticeofAdmissionCode")
                        .IsRequired()
                        .HasColumnType("varbinary(50)");

                    b.Property<DateTime>("NoticeofAdmissionDate")
                        .HasColumnType("date");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PlanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PlanEffectiveDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("PlanExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreAdmitCertification")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PreCertificationReqWindow")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PriorInsurancePlanID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RelationshiptoPatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("ReportofEligibilityCode")
                        .IsRequired()
                        .HasColumnType("varbinary(50)");

                    b.Property<DateTime>("ReportofEligibilityDate")
                        .HasColumnType("date");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SetIDIN2")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SetIDIN3")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VerificationBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("VerificationDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VerificationStatus")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InsuranceId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("MedicalData.Entities.LineNumber", b =>
                {
                    b.Property<int>("LineNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FacilityTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("FiscalPeriodDate")
                        .HasColumnType("date");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalClaimChargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalClaimCount")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("LineNumberId");

                    b.ToTable("LineNumbers");
                });

            modelBuilder.Entity("MedicalData.Entities.NextOfKin", b =>
                {
                    b.Property<int>("NOKId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("PhoneBusiness")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("PhoneHome")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.HasKey("NOKId");

                    b.ToTable("NextOfKins");
                });

            modelBuilder.Entity("MedicalData.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EntityTypeQualifier")
                        .HasColumnType("nchar(1)");

                    b.Property<string>("IndividualRelationshipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NameFirst")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameLast")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameMidle")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamePrefix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameSuffix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("ZIp")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MedicalData.Entities.PatientAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppointmentID")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Facility")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PatientAccountNumber")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryCareProvider")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("StudentIndicator")
                        .HasColumnType("bit");

                    b.HasKey("AccountId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PatientAccounts");
                });

            modelBuilder.Entity("MedicalData.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BirthOrder")
                        .HasColumnType("int");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Country")
                        .HasColumnType("nchar(10)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("DriversLicense")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("Language")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("MRN")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("MothersMaidenName")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<bool>("MultipleBirthIndicator")
                        .HasColumnType("bit");

                    b.Property<string>("NameSuffix")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("OtherDesignation")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<DateTime>("PatientDeathDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PatientDeathIndicator")
                        .HasColumnType("int");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientIdExt")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneBusiness")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("PhoneHome")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SNN")
                        .IsRequired()
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nchar(10)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nchar(255)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("MedicalData.Entities.Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AssociatedDiagnosis")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DiagnosisId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProcedureCodingMethod")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ProcedureDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProcedureDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("MedicalData.Entities.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("EmployersIdentificationNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntityIdCode")
                        .IsRequired()
                        .HasColumnType("nchar(2)");

                    b.Property<string>("EntityTypeQualifier")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<string>("IdCode")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("IdCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NameFirst")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameLast")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameMidle")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamePrefix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameSuffix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("MedicalData.Entities.PtdScore", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ResolvedBy")
                        .HasColumnType("nchar(10)");

                    b.Property<DateTime>("ResolvedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ScoreId");

                    b.ToTable("PtdScores");
                });

            modelBuilder.Entity("MedicalData.Entities.ServiceLine", b =>
                {
                    b.Property<int>("ServiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("FacilityCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("MonetaryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrimaryDiagnosisCodePointer")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ProcedureModifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("SecondaryDiagnosisCodePointer")
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("ServiceDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceIDQualifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ServiceTypeCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("UnitForMeasurementCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("ServiceLineId");

                    b.ToTable("ServiceLines");
                });

            modelBuilder.Entity("MedicalData.Entities.ServicePayment", b =>
                {
                    b.Property<int>("ServicePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdjudicatedProcedureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<decimal>("AdjustmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AdjustmentQuantity")
                        .HasColumnType("int");

                    b.Property<string>("AdjustmentReasonCode")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ClaimAdjustmentGroupCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("ClaimPaymentId")
                        .HasColumnType("int");

                    b.Property<decimal>("LineItemChargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LineItemControlNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("LineItemProviderPaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MedicalProcedureCode")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("MedicalProcedureIdQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MedicalProcedureModifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NUBCRevenueCode")
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("ProcedureModifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("ServiceIdQualifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("ServiceSupplementalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceSupplementalAmountQualifierCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("UnitsOfServicePaidCount")
                        .HasColumnType("int");

                    b.HasKey("ServicePaymentId");

                    b.ToTable("ServicePayments");
                });

            modelBuilder.Entity("MedicalData.Entities.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimFilingIndicatorCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("IndividualRelationshipCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("InsuranceTypeCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PayerAddress")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PayerCity")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayerEntityTypeQualifier")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PayerIdentificationCode")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PayerIdentificationCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayerNameFirst")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayerNameLast")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayerNameMidle")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayerNamePrefix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PayerNameSuffix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PayerResponsibilitySequenceNumberCode")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<string>("PayerState")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayerZip")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceIdentification")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberAddress")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SubscriberCity")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SubscriberDateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("SubscriberEntityTypeQualifier")
                        .HasColumnType("nchar(1)");

                    b.Property<string>("SubscriberIdentificationCode")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SubscriberIdentificationCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("SubscriberNameFirst")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberNameLast")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("SubscriberNameMidle")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberNamePrefix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubscriberNameSuffix")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubscriberSex")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SubscriberState")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("SubscriberZip")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SubscriberId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("MedicalData.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountNumberQualifier_BPR08")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("AccountNumberQualifier_BPR14")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("AdditionalPayeeId_REF_PQ")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AdditionalPayeeId_REF_TJ")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AdditionalPayerId_REF_2U")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CheckIssueOrEFTEffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("CommunicationNumberQualifier_PER_CX")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CommunicationNumber_PER_CX")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CreditDebitFlag")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<string>("DFIIdNumberQualifier_BPR06")
                        .HasColumnType("nchar(2)");

                    b.Property<string>("DFIIdNumberQualifier_BPR12")
                        .HasColumnType("nchar(2)");

                    b.Property<string>("EFTTraceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriginatingCompanySupplementalCode_BPR11")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PayeeAddress")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PayeeCity")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayeeIdCode")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PayeeIdCodeQualifier")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PayeeReferenceIdQualifier_REF_PQ")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PayeeReferenceIdQualifier_REF_TJ")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PayeeState")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayeeZip")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PayerAddress")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PayerCity")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayerContactName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PayerId_BPR10")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PayerIdentifier_N104")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PayerName")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PayerState")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayerZip")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PaymentFormatCode")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PaymentMethodCode")
                        .IsRequired()
                        .HasColumnType("nchar(3)");

                    b.Property<DateTime>("ProductionDate_REF_405")
                        .HasColumnType("date");

                    b.Property<string>("ReceiverId_REF_EV")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReceiverOrProviderAccountNumber")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("ReceiverOrProviderBankIDNumber")
                        .HasColumnType("varchar(12)");

                    b.Property<string>("ReferenceIdQualifier_REF_2U")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SenderBankAccountNumber")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("SenderDFIIdentifier")
                        .HasColumnType("varchar(12)");

                    b.Property<decimal>("TotalActualProviderPaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionHandlingCode")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MedicalData.Entities.Visit", b =>
                {
                    b.Property<int>("VIsitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccommodationCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActualLengthOfIPStay")
                        .HasColumnType("int");

                    b.Property<string>("AdmissionType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("AdmitDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AdmitReason")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmitSource")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdmittingDoctorFamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmittingDoctorGivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmittingDoctorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmittingDoctorMiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmittingDoctorPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AdmittingDoctorSuffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AlternateVisitID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AmbulatoryStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssignedLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttendingDoctorFamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttendingDoctorGivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttendingDoctorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttendingDoctorMiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttendingDoctorPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttendingDoctorSuffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BedStatus")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConsultingDoctor")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ContractAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ContractCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ContractEffectiveDate")
                        .HasColumnType("date");

                    b.Property<int>("ContractPeriod")
                        .HasColumnType("int");

                    b.Property<string>("CourtesyCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CurrentPatientBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("DeleteAccountDate")
                        .HasColumnType("date");

                    b.Property<string>("DeleteAccountIndicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DischargeDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DischargeDisposition")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DischargeToLocation")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EstimatedLengthOfIPstay")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpectedAdmitDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ExpectedDischargeDate")
                        .HasColumnType("date");

                    b.Property<string>("FinancialClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HospitalService")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InterestCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientStatusCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PendingLocation")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreAdmitNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreAdmitTestIndicator")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PriorLocation")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PriorTemporaryLocation")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReadmissionIndicator")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferralSourceCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferringDoctor")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ServicingFacility")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryLocation")
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalAdjustments")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalCharges")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalPayments")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TransferReason")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VipIndicator")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VisitDescription")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VisitIndicator")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VisitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VIsitId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("MedicalData.Entities.PatientAccount", b =>
                {
                    b.HasOne("MedicalData.Entities.Person", "Person")
                        .WithOne("PatientAccount")
                        .HasForeignKey("MedicalData.Entities.PatientAccount", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MedicalData.Entities.Person", b =>
                {
                    b.Navigation("PatientAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
